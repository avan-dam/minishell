** NOTES ON PIPES **

syntax pipeline:
command1 [ | command 2 ] ...

The output of each command in the pipeline is connected via a pipe to the
input of the next command. Each command reads the previous command's output.
This connection is performed before any redirections specified by the command.
The shell waits for all commands in the pipeline to completed.

A pipe chains commands together. It takes the output from one command and
feeds it to the next as input. The number of piped commands is arbitrary.

Use pipe() function to create a pipe, pipe() returns -1 if an error occurs.

** NOTES ON LISTS **

A list is a sequence of one or more pipelines seperated by one of the operators
';', '&', '&&' or '||'
Commands seperated by a ';' are executed sequentially, the shell waits for each
command to terminate in turn. The return status is the exit status of the last
command executed.

You can type as many commands as you like in the command line, when seperated
each of them with a semicolon ';'. 
The second command runs even if the first fails, the third command runs if the
second fails and so on.